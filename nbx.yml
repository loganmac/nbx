data:
  - name: db
    image: nanobox/mysql
    dir: /var/db/mysql
    config:
      foo: bar
      ram: "512"

  - name: queue
    image: nanobox/redis
    dir: /var/db/redis
    config:
      foo: bar
      ram: "512"

destinations:
  - name: production
    type: nanobox
    registry: registry.appname.nanoapp.io
    deploy: https://nanobox.io/deploy?team=myteam&group=mygroup&app=myApp
  - name: backup
    type: docker
    registry: hub.docker.io
  - name: staging
    type: kubernetes
    registry: random.registry.io
    deploy: https://api.random.registry.io?deploy_key=some-deployment-key

services:
  - name: web
    dev:
      image: nanobox/python-3-dev
      processes:
        - name: nginx
          command: nginx -c /etc/nginx.conf
        - name: python
          command: python app.py
      aliases:
        - nanoapp.local
      dependencies:
        - service1
        - service2
        - s3
    live:
      image: nanobox/python-3
      build:
        image: nanobox/python-3-dev
        steps:
          - python compile.py
        copy:
          - from: app
            to: /app
          - from: bin
            to: /usr/local/sbin
      processes:
        - name: nginx
          command: nginx -c /etc/nginx.conf
        - name: python
          command: nanoinit python app.py
      http:
        expose: 8080
        force_ssl: true
        health: /health
        routes:
          - 'admin:'
          - '^/admin/'
      tcp:
        - 5555:5555
      udp:
        - 9654:10000

  - name: worker
    dev:
      image: nanobox/python-3-dev
      processes:
        - name: python
          command: python app.py
      aliases:
        - nanoapp.local
      dependencies:
        - service1